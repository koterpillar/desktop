HISTFILE=$HOME/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory nomatch hist_ignore_all_dups hist_ignore_space
unsetopt autocd

autoload -Uz compinit
FPATH=$(echo $FPATH | sed 's!/usr/local/share/zsh/site-functions:!!')
compinit
autoload -Uz bashcompinit
bashcompinit

export DESKTOP_ROOT=$(dirname $(dirname $(readlink ~/.zshrc)))

alias grep='grep --color=auto'

if ! type open >/dev/null
then
    alias open=xdg-open
fi

bindkey -e

# X terminal keys
bindkey '^[[1;5D' vi-backward-word
bindkey '^[[1;5C' vi-forward-word
bindkey '^[OF' vi-end-of-line
bindkey '^[OH' vi-beginning-of-line
bindkey '^[[3~' delete-char
bindkey '^[[3;5~' delete-word

# Non-X terminal keys, where different
bindkey '^[[D' vi-backward-word
bindkey '^[[C' vi-forward-word
bindkey '^[[4~' vi-end-of-line
bindkey '^[[1~' vi-beginning-of-line

# macOS terminal keys, where different
bindkey '^[^[[D' vi-backward-word
bindkey '^[^[[C' vi-forward-word

# Edit the command line with Ctrl-V
bindkey '^V' edit-command-line

ZGEN_RESET_ON_CHANGE=($DESKTOP_ROOT/dotfiles/zshrc)

# Disable oh-my-zsh autoupdate, rely on zgen
DISABLE_AUTO_UPDATE=true

if [ ! -d $HOME/.zgen ]
then
    DEST=$HOME/.zgen
    HOME=/dev/null XDG_CONFIG_HOME=/dev/null git clone "https://github.com/tarjoilija/zgen.git" "$DEST"
fi

source $HOME/.zgen/zgen.zsh

if ! zgen saved; then
    echo 'Creating a zgen save'

    zgen oh-my-zsh

    zgen oh-my-zsh plugins/aws
    zgen oh-my-zsh plugins/bower
    zgen oh-my-zsh plugins/docker
    zgen oh-my-zsh plugins/git
    zgen oh-my-zsh plugins/gradle
    zgen oh-my-zsh plugins/npm
    zgen oh-my-zsh plugins/colored-man-pages

    zgen load agkozak/zsh-z

    zgen load zsh-users/zsh-autosuggestions

    zgen load zsh-users/zsh-syntax-highlighting

    zgen load petervanderdoes/git-flow-completion

    zgen load popstas/zsh-command-time

    zgen load unixorn/autoupdate-zgen

    zgen save
fi

autoload -U add-zsh-hook
load-version-managers() {
    if [ -z "$NVM_LOADED" ] && [ -d $HOME/.nvm ] && [ -f .nvmrc ]; then
        source "$HOME/.nvm/nvm.sh"
        NVM_LOADED=1
    fi

    if [ -d $HOME/.nvm ] && [ -f .nvmrc ]; then
        nvm use
    fi

    if [ -z "$JENV_LOADED" ] && type jenv >/dev/null && [ -f .java-version ]; then
        eval "$(jenv init -)"
        JENV_LOADED=1
    fi
}
add-zsh-hook chpwd load-version-managers

# FIXME: Docker plugin isn't registering for autocomplete
autoload _docker
compdef _docker docker

# Theme
if [ $HOST = taohua ]
then
    PROMPT_HOST=桃花
elif [ $HOST = liushu ]
then
    PROMPT_HOST=柳树
else
    PROMPT_HOST=$HOST
fi

if [ $UID = 0 ]
then
    PROMPT_HOST_COLOR=red
else
    PROMPT_HOST_COLOR=green
fi

PROMPT='%{$fg[$PROMPT_HOST_COLOR]%}$PROMPT_HOST%{$reset_color%} %~ \
$(git_prompt_info)\
%{$fg[red]%}%(!.#.»)%{$reset_color%} '
PROMPT2='%{$fg[red]%}\ %{$reset_color%}'
RPS1='%(?..%{$fg[red]%}%? ↵%{$reset_color%})'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[green]%}±%{$fg[yellow]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
ZSH_THEME_GIT_PROMPT_CLEAN=""
ZSH_THEME_GIT_PROMPT_DIRTY="⚡"

if [ -z "$SSH_CLIENT" ] && [ -z "$SSH_TTY" ] && [ $UID != 0 ]
then
    ZSH_THEME_TERM_TITLE_IDLE="%~"
else
    ZSH_THEME_TERM_TITLE_IDLE="$PROMPT_HOST: %~"
fi

ZSH_COMMAND_TIME_COLOR="cyan"

if type -f dircolors >/dev/null
then
    DIRCOLORS=dircolors
elif type -f gdircolors >/dev/null
then
    DIRCOLORS=gdircolors
else
    DIRCOLORS=true
fi
export LS_COLORS=$($DIRCOLORS -b $HOME/.dircolors | head -n 1 | sed "s/LS_COLORS='//;s/';//")

# global /etc/zshprofile overrides $PATH
# oh-my-zsh overrides $PAGER
source $HOME/.zshenv

if [ -f /etc/profile.d/vte.sh ]
then
    source /etc/profile.d/vte.sh
fi
