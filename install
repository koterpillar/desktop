#!/bin/bash

set -eou pipefail

source $(dirname $0)/functions.sh

# Packages
case "$OS" in
  linux)
    FEDORA_VERSION=$(rpm -E %fedora)
    sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-${FEDORA_VERSION}.noarch.rpm
    sudo dnf -y install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-${FEDORA_VERSION}.noarch.rpm
    curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
    curl --silent --location https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo
    sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
    sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
    sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
    sudo dnf install -y \
      alacritty \
      code \
      curl \
      docker \
      gh \
      ghc \
      git \
      git-delta \
      git-lfs \
      hlint \
      htop \
      ImageMagick \
      jq \
      lsof \
      make \
      meld \
      moreutils \
      mosh \
      mozilla-fira-mono-fonts \
      nmap \
      nodejs \
      npm \
      perl-Image-ExifTool \
      pwgen \
      python \
      python3 \
      ripgrep \
      rlwrap \
      rsync \
      sbt \
      strace \
      tcpdump \
      tig \
      tmux \
      util-linux-user \
      vim \
      vlc \
      wget \
      yarn \
      youtube-dl \
      zsh \
      && true

    # Systemd
    sudo systemctl daemon-reload || true
    sudo systemctl enable --no-reload \
      docker \
      sshd \
      && true
        sudo systemctl daemon-reload || true

    # Inotify limits
    echo 'fs.inotify.max_user_watches = 524288' | sudo tee /etc/sysctl.d/50-inotify.conf
    sudo sysctl -p --system
    ;;
  macos)
    # TODO: install brew
    brew install \
      ammonite-repl \
      colordiff \
      coreutils \
      gcc \
      ghc \
      git \
      git-delta \
      git-lfs \
      gnu-sed \
      gradle \
      htop \
      ipython \
      jq \
      nmap \
      ripgrep \
      rlwrap \
      sbt \
      shellcheck \
      shfmt \
      tig \
      tmux \
      unrar \
      vim \
      wget \
      youtube-dl \
      zsh \
      && true
    brew install -cask \
      alacritty \
      docker \
      firefox \
      font-fira-code \
      font-fira-mono \
      font-fira-sans \
      intellij-idea-ce \
      monitorcontrol \
      rectangle \
      spectacle \
      visual-studio-code \
      && true
    ;;
esac

# Shell
case "$OS" in
  linux)
    CURRENT_SHELL="$(getent passwd $USER | cut -d: -f7)"
    DESIRED_SHELL="/bin/zsh"
    ;;
  macos)
    CURRENT_SHELL="$(dscl . -read ~/ UserShell | sed 's/UserShell: //')"
    DESIRED_SHELL="/usr/local/bin/zsh"
    ;;
esac
if [ "$CURRENT_SHELL" != "$DESIRED_SHELL" ]
then
  chsh -s "$DESIRED_SHELL"
fi

# User packages
mkdir -p $HOME/.local/bin

curl -sSL https://get.haskellstack.org/stable/${OS/macos/osx}-x86_64.tar.gz | tar -z -x --strip 1 -C $HOME/.local/bin '*/stack'

github_release_url() {
  REPO="$1"
  START="$2"
  END="$3"

  curl -sSL https://api.github.com/repos/$REPO/releases/latest | jq -r '.assets[]|select(.name|startswith("'$START'"))|select(.name|endswith("'$END'")).browser_download_url'
}

curl -sSL $(github_release_url dhall-lang/dhall-haskell dhall-json x86_64-$OS.tar.bz2) | tar -j -x -C $HOME/.local './bin/*dhall*'
curl -sSL $(github_release_url dhall-lang/dhall-haskell dhall-yaml x86_64-$OS.tar.bz2) | tar -j -x -C $HOME/.local './bin/*dhall*'

case "$OS" in
  linux)
    sudo dnf install -y $(github_release_url Eugeny/tabby '' .rpm)
    ;;
  macos)
    brew install tabby
    ;;
esac

# User configuration
$DIR/makelinks
