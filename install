#!/bin/bash -e

INSTALL='sudo pacman -S --needed --noconfirm'

DIR=$(readlink -f $(dirname $0))

# Pacman configuration
PACMAN_CONF=/etc/pacman.conf
if ! diff -q $PACMAN_CONF $DIR/etc/pacman.conf >/dev/null
then
	sudo install $DIR/etc/pacman.conf $PACMAN_CONF

	sudo rm -rf /etc/pacman.d/gnupg
	sudo pacman-key --init
	sudo pacman-key --populate archlinux

	sudo pacman -Sy
fi

# Install pacaur from AUR manually
if ! which pacaur >/dev/null 2>&1
then
	function aur_install () {
		PACKAGE=$1
		TMPDIR=$(mktemp -d)
		trap "rm -rf $TMPDIR" EXIT
		curl -s https://aur.archlinux.org/cgit/aur.git/snapshot/$PACKAGE.tar.gz | \
			tar xz -C $TMPDIR
		pushd $TMPDIR/$PACKAGE >/dev/null
		makepkg
		sudo pacman -U --noconfirm $PACKAGE-*.pkg.tar.xz
		popd >/dev/null
	}

	$INSTALL wget base-devel abs

	$INSTALL expac yajl
	gpg --recv-keys 1EB2638FF56C0C53  # pacaur/cower key
	aur_install cower
	aur_install pacaur

	if [ ! -f $HOME/.config/pacaur/config ]
	then
		mkdir -p $HOME/.config
		ln -sfnT $DIR/config/pacaur $HOME/config/pacaur
	fi
fi

INSTALL='pacaur -S --needed --noconfirm'
AUR_INSTALL='pacaur -y --needed --noconfirm'

# Packages
# Files in packages/ may contain Bash brace expansions

$INSTALL $(bash -c "echo $(echo $(cat $DIR/packages/* | grep -v '^[a-z]\+:'))")

# gcc-multilib conflicts with gcc
yes | sudo pacman -S --needed gcc-multilib
$AUR_INSTALL $(bash -c "echo $(echo $(cat $DIR/packages/* | sed '/^aur:/!d;s/^aur://g'))")

ln -sfnT $DIR/dotfiles/stack $HOME/.stack
stack setup

# Shell
if [ $(getent passwd $USER | cut -d: -f7) != "/bin/zsh" ]
then
	chsh -s /bin/zsh
fi

# System config
sudo install $DIR/etc/default/tlp /etc/default/tlp

# Fontconfig
# https://gist.github.com/cryzed/4f64bb79e80d619866ee0b18ba2d32fc
sudo ln -sfn /etc/fonts/conf.avail/10-hinting-slight.conf /etc/fonts/conf.d/
sudo ln -sfn /etc/fonts/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d/
sudo ln -sfn /etc/fonts/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d/
sudo ln -sfn /etc/fonts/conf.avail/30-infinality-aliases.conf /etc/fonts/conf.d/

$DIR/makelinks

# Systemd
ls config/systemd/user/*.service | xargs -n 1 basename | xargs systemctl --user enable
sudo systemctl enable \
	docker \
	gdm \
	NetworkManager \
	nfs-client.target \
	rpcbind \
	sshd \
	tlp \
	tlp-sleep \
	&& true
sudo systemctl disable systemd-rfkill
timedatectl set-ntp true

# GSettings
gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us'), ('xkb', 'ru'), ('ibus', 'sunpinyin'), ('ibus', 'hangul')]"
gsettings set org.gnome.desktop.interface clock-format '24h'
gsettings set org.gnome.desktop.interface clock-show-date true
gsettings set org.gnome.desktop.interface monospace-font-name 'Fira Mono 11'
# To enlarge text on higher DPI displays
# gsettings set org.gnome.desktop.interface text-scaling-factor 1.25
gsettings set org.gnome.system.location enabled true
# This isn't in a schema
dconf load /org/gnome/terminal/legacy/profiles:/ <<END
[:b1dcc9dd-5262-4d8d-a863-c897e6d979b9]
font='Fira Mono 11'
palette=['rgb(0,0,0)', 'rgb(200,40,41)', 'rgb(113,140,0)', 'rgb(234,183,0)', 'rgb(66,113,174)', 'rgb(137,89,168)', 'rgb(62,153,159)', 'rgb(255,255,255)', 'rgb(0,0,0)', 'rgb(200,40,41)', 'rgb(113,140,0)', 'rgb(234,183,0)', 'rgb(66,113,174)', 'rgb(137,89,168)', 'rgb(62,153,159)', 'rgb(255,255,255)']
use-system-font=false
use-theme-colors=true
visible-name='alex'
END

gsettings set org.gnome.Terminal.Legacy.Settings default-show-menubar false
gsettings set org.gnome.Terminal.ProfilesList list "['b1dcc9dd-5262-4d8d-a863-c897e6d979b9']"
gsettings set org.gnome.Terminal.ProfilesList default 'b1dcc9dd-5262-4d8d-a863-c897e6d979b9'
